// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OlympicGames.Models;

namespace OlympicGames.Migrations
{
    [DbContext(typeof(CountryContext))]
    partial class CountryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OlympicGames.Models.Category", b =>
                {
                    b.Property<string>("CategoryID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Sport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryID = "indoorCurling",
                            Sport = "Curling",
                            Type = "Indoor"
                        },
                        new
                        {
                            CategoryID = "indoorDiving",
                            Sport = "Diving",
                            Type = "Indoor"
                        },
                        new
                        {
                            CategoryID = "indoorArchery",
                            Sport = "Archery",
                            Type = "Indoor"
                        },
                        new
                        {
                            CategoryID = "indoorBreakdancing",
                            Sport = "Breakdancing",
                            Type = "Indoor"
                        },
                        new
                        {
                            CategoryID = "outdoorBobsleigh",
                            Sport = "Bobsleigh",
                            Type = "Outdoor"
                        },
                        new
                        {
                            CategoryID = "outdoorRoadCycling",
                            Sport = "Road Cycling",
                            Type = "Outdoor"
                        },
                        new
                        {
                            CategoryID = "outdoorCanoeSprint",
                            Sport = "Canoe Sprint",
                            Type = "Outdoor"
                        },
                        new
                        {
                            CategoryID = "outdoorSkateboarding",
                            Sport = "Skateboarding",
                            Type = "Outdoor"
                        });
                });

            modelBuilder.Entity("OlympicGames.Models.Country", b =>
                {
                    b.Property<string>("CountryID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CategoryID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GameID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LogoImage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CountryID");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            CountryID = "canada",
                            CategoryID = "indoorCurling",
                            CountryName = "Canada",
                            GameID = "winter",
                            LogoImage = "canada.png"
                        },
                        new
                        {
                            CountryID = "sweden",
                            CategoryID = "indoorCurling",
                            CountryName = "Sweden",
                            GameID = "winter",
                            LogoImage = "sweden.png"
                        },
                        new
                        {
                            CountryID = "greatBritain",
                            CategoryID = "indoorCurling",
                            CountryName = "Great Britain",
                            GameID = "winter",
                            LogoImage = "greatBritain.png"
                        },
                        new
                        {
                            CountryID = "jamaica",
                            CategoryID = "outdoorBobsleigh",
                            CountryName = "Jamaica",
                            GameID = "winter",
                            LogoImage = "jamaica.png"
                        },
                        new
                        {
                            CountryID = "italy",
                            CategoryID = "outdoorBobsleigh",
                            CountryName = "Italy",
                            GameID = "winter",
                            LogoImage = "italy.jpg"
                        },
                        new
                        {
                            CountryID = "japan",
                            CategoryID = "outdoorBobsleigh",
                            CountryName = "Japan",
                            GameID = "winter",
                            LogoImage = "japan.png"
                        },
                        new
                        {
                            CountryID = "germany",
                            CategoryID = "indoorDiving",
                            CountryName = "Germany",
                            GameID = "summer",
                            LogoImage = "germany.png"
                        },
                        new
                        {
                            CountryID = "china",
                            CategoryID = "indoorDiving",
                            CountryName = "China",
                            GameID = "summer",
                            LogoImage = "china.png"
                        },
                        new
                        {
                            CountryID = "mexico",
                            CategoryID = "indoorDiving",
                            CountryName = "Mexico",
                            GameID = "summer",
                            LogoImage = "mexico.png"
                        },
                        new
                        {
                            CountryID = "brazil",
                            CategoryID = "outdoorRoadCycling",
                            CountryName = "Brazil",
                            GameID = "summer",
                            LogoImage = "brazil.png"
                        },
                        new
                        {
                            CountryID = "netherlands",
                            CategoryID = "outdoorRoadCycling",
                            CountryName = "Netherlands",
                            GameID = "summer",
                            LogoImage = "netherlands.png"
                        },
                        new
                        {
                            CountryID = "usa",
                            CategoryID = "outdoorRoadCycling",
                            CountryName = "USA",
                            GameID = "summer",
                            LogoImage = "usa.png"
                        },
                        new
                        {
                            CountryID = "thailand",
                            CategoryID = "indoorArchery",
                            CountryName = "Thailand",
                            GameID = "paralympic",
                            LogoImage = "thailand.png"
                        },
                        new
                        {
                            CountryID = "uruguay",
                            CategoryID = "indoorArchery",
                            CountryName = "Uruguay",
                            GameID = "paralympic",
                            LogoImage = "uruguay.png"
                        },
                        new
                        {
                            CountryID = "ukraine",
                            CategoryID = "indoorArchery",
                            CountryName = "Ukraine",
                            GameID = "paralympic",
                            LogoImage = "ukraine.png"
                        },
                        new
                        {
                            CountryID = "austria",
                            CategoryID = "outdoorCanoeSprint",
                            CountryName = "Austria",
                            GameID = "paralympic",
                            LogoImage = "austria.png"
                        },
                        new
                        {
                            CountryID = "pakistan",
                            CategoryID = "outdoorCanoeSprint",
                            CountryName = "Pakistan",
                            GameID = "paralympic",
                            LogoImage = "pakistan.png"
                        },
                        new
                        {
                            CountryID = "zimbabwe",
                            CategoryID = "outdoorCanoeSprint",
                            CountryName = "Zimbabwe",
                            GameID = "paralympic",
                            LogoImage = "zimbabwe.png"
                        },
                        new
                        {
                            CountryID = "france",
                            CategoryID = "indoorBreakdancing",
                            CountryName = "France",
                            GameID = "youth",
                            LogoImage = "france.png"
                        },
                        new
                        {
                            CountryID = "cyprus",
                            CategoryID = "indoorBreakdancing",
                            CountryName = "Cyprus",
                            GameID = "youth",
                            LogoImage = "cyprus.png"
                        },
                        new
                        {
                            CountryID = "russia",
                            CategoryID = "indoorBreakdancing",
                            CountryName = "Russia",
                            GameID = "youth",
                            LogoImage = "russia.png"
                        },
                        new
                        {
                            CountryID = "finland",
                            CategoryID = "outdoorSkateboarding",
                            CountryName = "Finland",
                            GameID = "youth",
                            LogoImage = "finland.png"
                        },
                        new
                        {
                            CountryID = "slovakia",
                            CategoryID = "outdoorSkateboarding",
                            CountryName = "Slovakia",
                            GameID = "youth",
                            LogoImage = "slovakia.png"
                        },
                        new
                        {
                            CountryID = "portugal",
                            CategoryID = "outdoorSkateboarding",
                            CountryName = "Portugal",
                            GameID = "youth",
                            LogoImage = "portugal.png"
                        });
                });

            modelBuilder.Entity("OlympicGames.Models.Game", b =>
                {
                    b.Property<string>("GameID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GameID");

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            GameID = "winter",
                            Name = "Winter Olympics"
                        },
                        new
                        {
                            GameID = "summer",
                            Name = "Summer Olympics"
                        },
                        new
                        {
                            GameID = "paralympic",
                            Name = "Paralympics"
                        },
                        new
                        {
                            GameID = "youth",
                            Name = "Youth Olympics"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
